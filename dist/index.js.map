{"version":3,"file":"index.js","names":["express","require","constants","CoinMarketCapService","TelegramBot","messageController","app","use","json","urlencoded","extended","bot","polling","module","exports","availableСurrencies","onText","convertCurrencyHandler","on","newChatMember","leftChatMember","newMessageHandler","console","log","listen","PORT","data","getAllSlugsRequest","getAllSlugs"],"sources":["../src/index.js"],"sourcesContent":["const express = require(\"express\");\n\nconst constants = require (\"./constants\");\nconst CoinMarketCapService = require('./services/coin-market-cap');\nconst TelegramBot = require('node-telegram-bot-api');\nconst messageController = require(\"./controllers/message\");\n// import cron from 'node-cron'\n\nconst app = express();\n\napp.use(\n\texpress.json(),\n\texpress.urlencoded({\n\t\textended: true,\n\t})\n);\n\n// const notes = [{\n// \tchatId: -895694621,\n// \ttime: '15:11 12:18',\n// \ttext: 'отдыхать'\n// }];\n\n// const task = cron.schedule('*/1 * * * *', () => {\n// \tnotes.foreach((note) =>{\n// \t\t  bot.sendMessage(note['chatId'], 'Напоминаю, что вы должны: '+ note['text'] + ' сейчас.');\n// \t})\n// \tconsole.log('running a task every minute');\n// });\n\nconst bot = new TelegramBot('5823108134:AAHy0ykLMcpgyV77M-rqyTty0bwzT6eBZRA', { polling: true });\nmodule.exports.bot = bot;\nlet availableСurrencies = [];\n\nbot.onText(/convert (?<value>.+) (?<curr>.+)/, messageController.convertCurrencyHandler);\n// bot.onText(/\\/joke/, messageController.getJokeHandler);\n// bot.onText(/\\/fund/, messageController.getDropsTabProfileHandler);\n// bot.onText(/\\/news/, messageController.getTopNews);\n\nbot.on('new_chat_members', messageController.newChatMember);\nbot.on('left_chat_member', messageController.leftChatMember);\nbot.on('message', messageController.newMessageHandler);\nbot.on(\"polling_error\", console.log);\n\n\napp.listen(constants.PORT, async() => {\n\tconsole.log(`Server running on port ${constants.PORT}`);\n\tconst data = await CoinMarketCapService.getAllSlugsRequest();\n\tavailableСurrencies = CoinMarketCapService.getAllSlugs();\n\texports.availableСurrencies = availableСurrencies;\n\tconsole.log(availableСurrencies)\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAElC,MAAMC,SAAS,GAAGD,OAAO,CAAE,aAAa,CAAC;AACzC,MAAME,oBAAoB,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAClE,MAAMG,WAAW,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AACpD,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAC1D;;AAEA,MAAMK,GAAG,GAAGN,OAAO,EAAE;AAErBM,GAAG,CAACC,GAAG,CACNP,OAAO,CAACQ,IAAI,EAAE,EACdR,OAAO,CAACS,UAAU,CAAC;EAClBC,QAAQ,EAAE;AACX,CAAC,CAAC,CACF;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,IAAIP,WAAW,CAAC,gDAAgD,EAAE;EAAEQ,OAAO,EAAE;AAAK,CAAC,CAAC;AAChGC,MAAM,CAACC,OAAO,CAACH,GAAG,GAAGA,GAAG;AACxB,IAAII,mBAAmB,GAAG,EAAE;AAE5BJ,GAAG,CAACK,MAAM,CAAC,kCAAkC,EAAEX,iBAAiB,CAACY,sBAAsB,CAAC;AACxF;AACA;AACA;;AAEAN,GAAG,CAACO,EAAE,CAAC,kBAAkB,EAAEb,iBAAiB,CAACc,aAAa,CAAC;AAC3DR,GAAG,CAACO,EAAE,CAAC,kBAAkB,EAAEb,iBAAiB,CAACe,cAAc,CAAC;AAC5DT,GAAG,CAACO,EAAE,CAAC,SAAS,EAAEb,iBAAiB,CAACgB,iBAAiB,CAAC;AACtDV,GAAG,CAACO,EAAE,CAAC,eAAe,EAAEI,OAAO,CAACC,GAAG,CAAC;AAGpCjB,GAAG,CAACkB,MAAM,CAACtB,SAAS,CAACuB,IAAI,EAAE,YAAW;EACrCH,OAAO,CAACC,GAAG,CAAE,0BAAyBrB,SAAS,CAACuB,IAAK,EAAC,CAAC;EACvD,MAAMC,IAAI,GAAG,MAAMvB,oBAAoB,CAACwB,kBAAkB,EAAE;EAC5DZ,mBAAmB,GAAGZ,oBAAoB,CAACyB,WAAW,EAAE;EACxDd,OAAO,CAACC,mBAAmB,GAAGA,mBAAmB;EACjDO,OAAO,CAACC,GAAG,CAACR,mBAAmB,CAAC;AACjC,CAAC,CAAC"}